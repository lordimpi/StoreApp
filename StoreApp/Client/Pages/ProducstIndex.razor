@page "/Product/Index"
@inject DialogService DialogService
@implements IDisposable
@inject HttpClient ClientHttp

<div class="container-fluid">
    <h1>Products</h1>
    <hr />
    <p>
        <button @onclick="@(()=>ShowCardProduct(null))" class="btn btn-primary">Add New <span class="oi oi-plus"></span></button>
    </p>

    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true"
                    FilterMode="FilterMode.Simple" PageSize="4" AllowPaging="true" AllowSorting="true" Data="@Products" TItem="Product"
                    ColumnWidth="200px" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive">

        <Columns>
            <RadzenDataGridColumn TItem="Product" Property="Id" Filterable="false" Title="ID" Width="50px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="Product" Title="RutaImagen" Sortable="false" Filterable="false" Width="200px">
                <Template Context="data">
                    <RadzenImage Path="@data.RutaImagen" style="width:100px;height:100px;max-width: 100%; height: auto;" />
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Product" Property="Nombre" Title="Nombre" />
            <RadzenDataGridColumn TItem="Product" Property="Descripcion" Title="Descripcion" Width="150px" />
            <RadzenDataGridColumn TItem="Product" Property="Precio.PrecioVenta" Title="Precio" />
            <RadzenDataGridColumn TItem="Product" Property="FechaAlta" Title="Fecha de creacion" FormatString="{0:d}" />
            <RadzenDataGridColumn TItem="Product" Property="FechaBaja" Title="Fecha de baja" FormatString="{0:d}" />
            <RadzenDataGridColumn TItem="Product" Title="">
                <Template Context="data">
                    <a class="btn btn-warning" @onclick="@(()=>ShowCardProduct(data))"><span class="oi oi-pencil"></span></a>
                    <a class="btn btn-danger" @onclick="@(()=>ShowDialog(data))"><span class="oi oi-trash"></span></a>
                </Template>
            </RadzenDataGridColumn>

        </Columns>

    </RadzenDataGrid>

</div>

@code
{
    IEnumerable<Product> Products = new List<Product>();
    public bool Confirm { get; set; }
    protected async override Task OnInitializedAsync()
    {
        Products = await ClientHttp.GetFromJsonAsync<List<Product>>("api/ListProducts");
        DialogService.OnOpen += Open;
        DialogService.OnClose += Close;
    }

    public void Dispose()
    {
        // The DialogService is a singleton so it is advisable to unsubscribe.
        DialogService.OnOpen -= Open;
        DialogService.OnClose -= Close;
    }

    void Open(string title, Type type, Dictionary<string, object> parameters, DialogOptions options)
    {
        Console.WriteLine("Dialog opened");
    }

    void Close(dynamic result)
    {
        Console.WriteLine($"Dialog closed");
    }

    private async Task ShowDialog(Product product)
    {
        if (await DialogService.Confirm("Are you sure this record?", "" + product.Nombre, new ConfirmOptions() { OkButtonText = "Yes", CancelButtonText = "No" }) == true)
        {
            Confirm = true;
        }
        else
        {
            Confirm = false;
        }
    }

    private async Task ShowCardProduct(Product product)
    {
        await DialogService.OpenAsync<CreateProduct>("StoreApp",
            new Dictionary<string, object>() { { "Product", product } },
            new DialogOptions() { Width = "900px", Height = "700px" });
    }
}
