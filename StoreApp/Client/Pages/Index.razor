@page "/"
@inject HttpClient ClientHttp
@inject NotificationService NotificationService

<div class="container-fluid">
    <hr />
    <h1>StoreApp!</h1>

    Welcome to my Store App
    <hr />

    <div class="card-columns">
        @foreach (var item in Products)
        {
            <div class="col mb-4">
                <div class="card" style="width:400px">
                    <img class="card-img-top"
                         src="/@item.RutaImagen" alt="@item.Nombre"
                         style="width: 100%; cursor: pointer " @onclick="@(()=> ShowModal(item))">
                    <div class="card-body">
                        <h4 class="card-title">$ @item.Precio.PrecioVenta</h4>
                        <p class="card-text">@item.Nombre</p>
                        <button @onclick="AddProductToCar" class="btn btn-success">Add to car</button>
                    </div>
                </div>
            </div>
        }
    </div>

</div>
@if (LayerVisible)
{
    <ProductDetails Product="LayerProduct" OnCancel="DialogCancel" OnAdding="AddProductToCar"></ProductDetails>
}

@code
{
    List<Product> Products = new List<Product>();
    bool LayerVisible;
    Product LayerProduct;
    List<Product> SelectedProducs = new List<Product>();
    protected async override Task OnInitializedAsync()
    {
        Products = await ClientHttp.GetFromJsonAsync<List<Product>>("api/ListProducts");
    }

    private void ShowModal(Product product)
    {
        LayerProduct = product;
        LayerVisible = true;
    }

    private void DialogCancel()
    {
        LayerVisible = false;
    }

    private void AddProductToCar()
    {
        Product product = LayerProduct;
        SelectedProducs.Add(product);
        LayerVisible = false;
        ShowNotification(new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Success Summary",
            Detail = "Product adding to car",
            Duration = 2000
        });
        // When you need delet item before to add sale car, use this line
        //Products.Remove(product);
    }

    private void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }
}